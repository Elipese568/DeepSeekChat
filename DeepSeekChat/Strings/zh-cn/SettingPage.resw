<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="AboutSettingHeader.Text" xml:space="preserve">
    <value>关于</value>
  </data>
  <data name="AddButton.Content" xml:space="preserve">
    <value>添加</value>
  </data>
  <data name="AddModelLabel.Text" xml:space="preserve">
    <value>添加模型</value>
  </data>
  <data name="AiAvatarSettingCard.Description" xml:space="preserve">
    <value>选择要在左边显示的AI头像</value>
  </data>
  <data name="AiAvatarSettingCard.Header" xml:space="preserve">
    <value>AI头像</value>
  </data>
  <data name="AiServiceSettingHeader.Text" xml:space="preserve">
    <value>AI服务</value>
  </data>
  <data name="ApiKeySettingCard.Description" xml:space="preserve">
    <value>设置密钥以使用AI</value>
  </data>
  <data name="ApiKeySettingCard.Header" xml:space="preserve">
    <value>密钥</value>
  </data>
  <data name="ApiKeyTipFlyout.Subtitle" xml:space="preserve">
    <value>设置正确的密钥以与AI连接</value>
  </data>
  <data name="ApiKeyTipFlyout.Title" xml:space="preserve">
    <value>正确设置密钥</value>
  </data>
  <data name="ArgWrongTip.Text" xml:space="preserve">
    <value>模型名称和ID不可置空或填写空白字符</value>
  </data>
  <data name="CancelButton.Content" xml:space="preserve">
    <value>取消</value>
  </data>
  <data name="DisplayLanguageSettingCard.Description" xml:space="preserve">
    <value>选择要显示的语言</value>
  </data>
  <data name="DisplayLanguageSettingCard.Header" xml:space="preserve">
    <value>显示语言</value>
  </data>
  <data name="GeneralSettingHeader.Text" xml:space="preserve">
    <value>通用</value>
  </data>
  <data name="HoverImageTip.Text" xml:space="preserve">
    <value>将鼠标放置在图片上方以查看完整头像</value>
  </data>
  <data name="InvaildModifyDefaultModelInformationMessage" xml:space="preserve">
    <value>不可修改默认模型的信息</value>
  </data>
  <data name="InvaildRemoveDefaultModelMessage" xml:space="preserve">
    <value>不可删除默认模型</value>
  </data>
  <data name="ModelDescriptionTextBox.Header" xml:space="preserve">
    <value>模型描述</value>
  </data>
  <data name="ModelDescriptionTextBox.PlaceholderText" xml:space="preserve">
    <value>输入这个模型的描述</value>
  </data>
  <data name="ModelIdTextBox.Header" xml:space="preserve">
    <value>模型ID</value>
  </data>
  <data name="ModelIdTextBox.PlaceholderText" xml:space="preserve">
    <value>输入这个模型的ID</value>
  </data>
  <data name="ModelNameTextBox.Header" xml:space="preserve">
    <value>模型名称</value>
  </data>
  <data name="ModelNameTextBox.PlaceholderText" xml:space="preserve">
    <value>为这个模型命名</value>
  </data>
  <data name="ModelSettingCard.Description" xml:space="preserve">
    <value>选择一个模型以与AI对话</value>
  </data>
  <data name="ModelSettingCard.Header" xml:space="preserve">
    <value>模型</value>
  </data>
  <data name="ModifyModelOptionsDialogTitle" xml:space="preserve">
    <value>修改信息</value>
  </data>
  <data name="OptionsButton.Content" xml:space="preserve">
    <value>选项设置</value>
  </data>
  <data name="PersonalitySettingHeader.Text" xml:space="preserve">
    <value>个性化</value>
  </data>
  <data name="PickNewButton.Content" xml:space="preserve">
    <value>选取新头像</value>
  </data>
  <data name="RemoveModelButton.Content" xml:space="preserve">
    <value>移除模型</value>
  </data>
  <data name="ResetButton.Content" xml:space="preserve">
    <value>重置</value>
  </data>
  <data name="ServerEndpointSettingCard.Description" xml:space="preserve">
    <value>设置AI服务器地址</value>
  </data>
  <data name="ServerEndpointSettingCard.Header" xml:space="preserve">
    <value>服务器地址</value>
  </data>
  <data name="SettingPageTitle.Text" xml:space="preserve">
    <value>设置</value>
  </data>
  <data name="UserAvatarSettingCard.Description" xml:space="preserve">
    <value>选择要在右边显示的你的头像</value>
  </data>
  <data name="UserAvatarSettingCard.Header" xml:space="preserve">
    <value>用户头像</value>
  </data>
</root>